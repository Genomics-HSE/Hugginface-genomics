seed_everything: 1234
#ckpt_path: "results"

trainer:
#  logger:
#    class_path: pytorch_lightning.loggers.comet.CometLogger
#    init_args:
#      workspace: "kenenbek"
#      project_name: "deepgen"
#      save_dir: "results"
  enable_checkpointing: false
#  callbacks:
#    class_path: pytorch_lightning.callbacks.ModelCheckpoint
#    init_args:
#      monitor: "val_loss"
#      dirpath: ${trainer.logger.save_dir}
#      filename: "gru-{val_loss:.2f}"
#      save_top_k: 3
#      mode: "min"

  default_root_dir: "results"
  accelerator: 'cpu'
  devices: null
  max_epochs: 1
  limit_val_batches: 1
  val_check_interval: 50
  log_every_n_steps: 10
  auto_lr_find: true
model:
  class_path: deepgen.models.GruLabeler
  init_args:
    embedding:
      class_path: deepgen.models.NoEmbedding
    n_class: 32
    input_size: 1
    hidden_size: 32
    num_layers: 1
    predictor:
      class_path: deepgen.models.Predictor
      init_args:
        d_model: 64
        dropout: 0.1
        n_class: 32

data:
  class_path: deepgen.data.DatasetXY
  init_args:
    kotok:
      class_path: deepgen.data.Kotok
      init_args:
        a: 177
    train_generator:
      class_path: deepgen.data.get_liner_generator
      init_args:
        random_seed: 11
        num_genomes: 1000
        genome_length: 300
        num_generators: 100
        return_local_times: true
        return_full_dist: false
        genome_postproccessor: "do_filter"
        times_postproccessor: "do_filter_2"
        demographic_events_generator:
          class_path: deepgen.data.get_const_demographcs
    val_generator:
      class_path: deepgen.data.get_liner_generator
      init_args:
        random_seed: 11
        num_genomes: 1000
        genome_length: ${data.genome_length}
        num_generators: 100
        return_local_times: true
        return_full_dist: false
        genome_postproccessor:
          class_path: deepgen.data.do_filter
        times_postproccessor:
          class_path: deepgen.data.do_filter_2
        demographic_events_generator:
          class_path: deepgen.data.get_const_demographcs
    test_generator:
      class_path: deepgen.data.get_liner_generator
      init_args:
        random_seed: 11
        num_genomes: 1000
        genome_length: ${data.genome_length}
        num_generators: 100
        return_local_times: true
        return_full_dist: false
        genome_postproccessor:
          class_path: deepgen.data.do_filter
        times_postproccessor:
          class_path: deepgen.data.do_filter_2
        demographic_events_generator:
          class_path: deepgen.data.get_const_demographcs
    batch_size: 8
    num_workers: 8
